{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["leg","request","XMLHttpRequest","open","send","onload","json","JSON","parse","responseText","h","w","p","d3","append","text","attr","style","html","svg","info","xScale","domain","Date","d","range","yScale","selectAll","data","enter","on","e","this","getAttribute","i","Math","round","xA","ticks","call","yA","tickFormat","legend","lScale","lA","App","className","React","Component","ReactDOM","render","document","getElementById","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ff5b6aa.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport * as d3 from 'd3'\nimport './App.css';\nimport { timeFormat, timeParse } from 'd3';\n\nconst leg = [1,2,3,4,5,6,7,8]\n\nconst request = new XMLHttpRequest();\nrequest.open('Get', 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/global-temperature.json')\nrequest.send();\nrequest.onload = function() {\n  const json = JSON.parse(request.responseText);\n\n  const h = 600;\n  const w = 1300;\n  const p = 60;\n  \n  d3.select('.App').append('h1').text('Heatmap of the United States').attr('id', 'title').style('margin-top', '2px'); \n  d3.select('.App').append('h3').html('Monthly Surface Temps, Base Temp of 8.66&#8451;').attr('id', 'description').style('margin-top', '-20px')\n  \n \n\n  \n  const svg = d3.select('.App')\n                .append('svg')\n                .attr('height', h)\n                .attr('width', w)\n                .style('margin-top', '-65px')\n                \n\n  let info = d3.select('.App')\n               .append('div')\n               .style('display', 'none')\n               .style('width', \"130px\")\n               .style('height', '60px')\n               .style('border-radius', '5%')\n               .style('background-color', 'rgb(45, 46, 45, 0.8)')\n               .style('position', 'absolute') \n               .style('color', 'white')\n               .style('padding', '8px')\n               .attr('id', 'tooltip');  //inspired by the last answer on this post (https://www.freecodecamp.org/forum/t/d3-tooltip-wanted-is-that-15-chars-now/92398/6)\n\n  const xScale = d3.scaleTime()\n                   .domain([new Date('January 1, ' + d3.min(json['monthlyVariance'], (d) => d['year'])), new Date('January 1, ' + d3.max(json['monthlyVariance'], (d) => d['year'])) ])\n                   .range([p, w-p]);\n  \n  const yScale = d3.scaleBand()\n                   .domain(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'])\n                   .range([h-p, p])\n                   \n\n\n\n  svg.selectAll('rect')\n     .data(json['monthlyVariance']) \n     .enter()\n     .append('rect') \n     .attr('x', (d) => xScale(new Date('January 1, ' + d['year'])) ) \n     .attr('y', (d) => h-(h-yScale((d['month']))-p) -p) \n     .attr('width', 5)\n     .attr('height', (d) => (h-p-p)/12)\n     .attr('class', 'cell')\n     .attr('data-year', (d) => d['year'])\n     .attr('data-month', (d) => d['month']-1) \n     .attr('data-temp', (d) => d['variance'])\n     .attr('fill', (d) => d['variance'] > 3? '#F03019' : d['variance'] > 2? '#FF592B' : d['variance'] > 1? '#FF9139' : d['variance'] > 0? '#FFCC54' : d['variance'] > -0.5? '#FFFB9E' : d['variance'] > -1? '#97B6FD' : d['variance'] > -2? '#5387FF' : d['variance'] > -3? '#285CCC' : '#285CCC')\n     .on('mouseover', function(e) {\n          info = info.style('display', 'inline')\n                     .attr('data-year', this.getAttribute('data-year') )\n                     .attr('data-month', this.getAttribute('data-month') ) \n                     .attr('data-temp', this.getAttribute('data-temp') ) \n                     .style('transform', i => 'translate(' + (this.getAttribute('x')-w-p) + 'px,' + (this.getAttribute('y')-30) + 'px)') \n                     .html(e => '<div>' + this.getAttribute('data-year') + ' - ' + \n                          ( this.getAttribute('data-month') ==0? 'January'\n                          : this.getAttribute('data-month') ==1? 'February'\n                          : this.getAttribute('data-month') ==2? 'March'\n                          : this.getAttribute('data-month') ==3? 'April'\n                          : this.getAttribute('data-month') ==4? 'May'\n                          : this.getAttribute('data-month') ==5? 'June' \n                          : this.getAttribute('data-month') ==6? 'July' \n                          : this.getAttribute('data-month') ==7? 'August' \n                          : this.getAttribute('data-month') ==8? 'September' \n                          : this.getAttribute('data-month') ==9? 'October' \n                          : this.getAttribute('data-month') ==10? 'November'\n                          :  'December') +'</div>'\n                          + '<div>' + (Math.round((8.66-this.getAttribute('data-temp'))*100))/100 + '&#8451;</div>'\n                          + '<div>' + (Math.round(this.getAttribute('data-temp')*100)/100) + '&#8451;</div>'\n                     )\n     })              \n     .on('mouseout', function(e) {\n          info = info.style('display', 'none')\n     })\n\n     const xA = d3.axisBottom(xScale)\n                  .ticks(27)\n\n     svg.append('g')\n        .attr(\"transform\", \"translate(0,\" + (h-p) + \")\")\n        .attr('id', 'x-axis')\n        .call(xA)\n        \n\n     const yA = d3.axisLeft(yScale)\n                  .tickFormat(d => d== 1? 'January' : d==2? 'February' : d==3? 'March' : d==4? 'April' : d==5? 'May' : d==6? 'June' : d==7? 'July' : d==8? 'August' : d==9? 'September' : d==10? 'October' : d==11? 'November' : 'December')\n                  \n\n     svg.append('g')\n        .attr(\"transform\", \"translate(\" + p + \",0)\")\n        .attr('id', 'y-axis')\n        .call(yA)\n  \n      \n     \n     const legend = d3.select('.App')\n                      .append('svg')\n                      .attr('height', 40)\n                      .attr('width', 415)\n                      .attr('id', 'legend')\n                      .style('margin-top', \"-40px\")\n                      .style('text-align', 'right')\n     \n      legend.selectAll('rect')\n           .data(leg) \n           .enter()\n           .append('rect') \n           .attr('height', 20)\n           .attr('width', 50)\n           .attr('x', i => -42.5 + i*50)\n           .style('fill', i => i===8? '#F03019' : i===7? '#FF592B' : i===6? '#FF9139' : i===5? '#FFCC54' : i===4? '#FFFB9E' : i==3? '#97B6FD' : i===2? '#5387FF' : '#285CCC')\n\n\n      const lScale = d3.scaleLinear()\n                       .domain([1,8])\n                       .range([7,407])\n     \n\nconst lA = d3.axisBottom(lScale)\n             .ticks(8)\n             .tickFormat(i=> i===1? \"-3.0\" : i===2? \"-2.0\" : i===3? \"-1.0\" : i===4? \"-0.5\": i===5? \"0\" : i===6? '1.0' : i===7? '2.0' : '3.0')\n\nlegend.append('g')\n      .attr('id', 'leg-axis')\n      .attr(\"transform\", \"translate(0,20)\")\n      .call(lA)     \n              \n}\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className='App'></div>\n    )\n  }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}